• Установить в виртуальную машину или VDS Docker, настроить набор контейнеров через docker compose по инструкции.
Часть с настройкой certbot и HTTPS опустить, если у вас нет настоящего домена и белого IP.
=======================================
apt install docker.io docker-compose
root@karartjom-Idea:~# docker run -d --restart always --name nginx1 -p 80:80 -v /var/www/html:/usr/share/nginx/html nginx
Unable to find image 'nginx:latest' locally
latest: Pulling from library/nginx
a480a496ba95: Pull complete
f3ace1b8ce45: Pull complete
11d6fdd0e8a7: Pull complete
f1091da6fd5c: Pull complete
40eea07b53d8: Pull complete
6476794e50f4: Pull complete
70850b3ec6b2: Pull complete
Digest: sha256:28402db69fec7c17e179ea87882667f1e054391138f77ffaf0c3eb388efc3ffb
Status: Downloaded newer image for nginx:latest
d79da0084b3cc8016ee7ba9f7893fe8b8c95364c6f49dec00b06b43d63324f57
root@karartjom-Idea:~# docker ps
CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS                               NAMES
d79da0084b3c   nginx     "/docker-entrypoint.…"   34 seconds ago   Up 32 seconds   0.0.0.0:80->80/tcp, :::80->80/tcp   nginx1

Проверяем логи:
root@karartjom-Idea:~# docker logs nginx1
/docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
/docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
/docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
/docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
/docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
/docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
/docker-entrypoint.sh: Configuration complete; ready for start up
2024/11/08 16:33:19 [notice] 1#1: using the "epoll" event method
2024/11/08 16:33:19 [notice] 1#1: nginx/1.27.2
2024/11/08 16:33:19 [notice] 1#1: built by gcc 12.2.0 (Debian 12.2.0-14)
2024/11/08 16:33:19 [notice] 1#1: OS: Linux 6.8.0-48-generic
2024/11/08 16:33:19 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576
2024/11/08 16:33:19 [notice] 1#1: start worker processes
2024/11/08 16:33:19 [notice] 1#1: start worker process 29
2024/11/08 16:33:19 [notice] 1#1: start worker process 30
172.17.0.1 - - [08/Nov/2024:16:35:37 +0000] "GET / HTTP/1.1" 200 10671 "-" "curl/8.5.0" "-"

root@karartjom-Idea:/home/GB/wordpress# ll
итого 8
drwxr-xr-x 2 root root 4096 ноя  8 19:38 ./
drwxr-xr-x 3 root root 4096 ноя  8 19:38 ../
root@karartjom-Idea:/home/GB/wordpress# cat > .env
MYSQL_ROOT_PASSWORD=1213123
MYSQL_USER=wp
MYSQL_PASSWORD=1123
^C
root@karartjom-Idea:/home/GB/wordpress# cat .env
MYSQL_ROOT_PASSWORD=1213123
MYSQL_USER=wp
MYSQL_PASSWORD=1123
root@karartjom-Idea:/home/GB/wordpress# ll
итого 12
drwxr-xr-x 2 root root 4096 ноя  8 19:39 ./
drwxr-xr-x 3 root root 4096 ноя  8 19:38 ../
-rw-r--r-- 1 root root   62 ноя  8 19:39 .env
root@karartjom-Idea:/home/GB/wordpress# mkdir nginx-conf
root@karartjom-Idea:/home/GB/wordpress# cd nginx-conf/
root@karartjom-Idea:/home/GB/wordpress/nginx-conf# cat > nginx.conf
server {
  listen 80 default_server;
  server_name  _;

  root /var/www/html;
  index index.php;

  access_log /var/log/nginx/site-access.log;
  error_log /var/log/nginx/site-error.log;

  location / {
    try_files $uri $uri/ /index.php?$args;
  }

  location ~ \.php$ {
    try_files $uri =404;
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_pass wordpress:9000;
    fastcgi_index index.php;
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param PATH_INFO $fastcgi_path_info;
    }
}

Проверяем конфиг:
root@karartjom-Idea:/home/GB/wordpress/nginx-conf# cat nginx.conf
server {
  listen 80 default_server;
  server_name  _;

  root /var/www/html;
  index index.php;

  access_log /var/log/nginx/site-access.log;
  error_log /var/log/nginx/site-error.log;

  location / {
    try_files $uri $uri/ /index.php?$args;
  }

  location ~ \.php$ {
    try_files $uri =404;
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_pass wordpress:9000;
    fastcgi_index index.php;
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param PATH_INFO $fastcgi_path_info;
    }
}
root@karartjom-Idea:/home/GB/wordpress/nginx-conf# ^C
root@karartjom-Idea:/home/GB/wordpress/nginx-conf# ls
nginx.conf
root@karartjom-Idea:/home/GB/wordpress/nginx-conf# cat > docker-compose.yml
version: '3.3'

services:
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./data/html:/var/www/html
      - ./logs/nginx:/var/log/nginx
    ports:
      - "8080:80"
    links:
      - wordpress

  wordpress:
    depends_on:
      - db
    image: wordpress:latest
    volumes:
      - ./data/html:/var/www/html
    ports:
      - "80:80"
    restart: always
    environment:
      WORDPRESS_DB_HOST:  db:3306
      WORDPRESS_DB_USER: *имя пользователя от MySQL*
      WORDPRESS_DB_PASSWORD: *пароль от MySQL*
      WORDPRESS_DB_NAME: wordpress

  db:
    image: mysql:5.7
    volumes:
      - ./data/mysql:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: *root-пароль от MySQL*
      MYSQL_DATABASE: wordpress
      MYSQL_USER: *имя пользователя от MySQL*
      MYSQL_PASSWORD: *пароль от MySQL*

Создаем ямл файл для запуска докера:
root@karartjom-Idea:/home/GB/wordpress/nginx-conf# nano
docker-compose.yml  nginx.conf
root@karartjom-Idea:/home/GB/wordpress/nginx-conf# nano docker-compose.yml
root@karartjom-Idea:/home/GB/wordpress# cd nginx-conf/
root@karartjom-Idea:/home/GB/wordpress/nginx-conf# ls
docker-compose.yml  nginx.conf
root@karartjom-Idea:/home/GB/wordpress/nginx-conf# nano nginx.conf
root@karartjom-Idea:/home/GB/wordpress/nginx-conf# cd
root@karartjom-Idea:~# cd /home/GB/wordpress/nginx-conf/
root@karartjom-Idea:/home/GB/wordpress/nginx-conf# nano docker-compose.yml

root@karartjom-Idea:/home/GB/wordpress/nginx-conf# tree
.
+-- docker-compose.yml
L-- nginx.conf

1 directory, 2 files
root@karartjom-Idea:/home/GB/wordpress/nginx-conf# cd ..
root@karartjom-Idea:/home/GB/wordpress# ll
итого 16
drwxr-xr-x 3 root root 4096 ноя  8 19:40 ./
drwxr-xr-x 3 root root 4096 ноя  8 19:38 ../
-rw-r--r-- 1 root root   62 ноя  8 19:39 .env
drwxr-xr-x 2 root root 4096 ноя  8 19:52 nginx-conf/

Проверяем и убираем процессы, которые занимают 80 порт:
root@karartjom-Idea:/home/GB/wordpress# ss -ntlp | grep 80
LISTEN 0      4096         0.0.0.0:80         0.0.0.0:*    users:(("docker-proxy",pid=20792,fd=4))                      
LISTEN 0      511                *:8081             *:*    users:(("apache2",pid=19660,fd=6),("apache2",pid=19659,fd=6),("apache2",pid=19658,fd=6),("apache2",pid=19657,fd=6),("apache2",pid=19656,fd=6),("apache2",pid=18998,fd=6))
LISTEN 0      511                *:8080             *:*    users:(("apache2",pid=19660,fd=4),("apache2",pid=19659,fd=4),("apache2",pid=19658,fd=4),("apache2",pid=19657,fd=4),("apache2",pid=19656,fd=4),("apache2",pid=18998,fd=4))
LISTEN 0      4096            [::]:80            [::]:*    users:(("docker-proxy",pid=20800,fd=4))                      
root@karartjom-Idea:/home/GB/wordpress# docker ps
CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS                               NAMES
d79da0084b3c   nginx     "/docker-entrypoint.…"   21 minutes ago   Up 21 minutes   0.0.0.0:80->80/tcp, :::80->80/tcp   nginx1
root@karartjom-Idea:/home/GB/wordpress# docker stop nginx1
nginx1
root@karartjom-Idea:/home/GB/wordpress# ss -ntlp | grep 80
LISTEN 0      511                *:8081             *:*    users:(("apache2",pid=19660,fd=6),("apache2",pid=19659,fd=6),("apache2",pid=19658,fd=6),("apache2",pid=19657,fd=6),("apache2",pid=19656,fd=6),("apache2",pid=18998,fd=6))
LISTEN 0      511                *:8080             *:*    users:(("apache2",pid=19660,fd=4),("apache2",pid=19659,fd=4),("apache2",pid=19658,fd=4),("apache2",pid=19657,fd=4),("apache2",pid=19656,fd=4),("apache2",pid=18998,fd=4))

Пробуем запустить docker-compose.
Была ошибка с местоположением docker-compose.yml и ошибки в самом ямле - исправил:
root@karartjom-Idea:/home/GB/wordpress/nginx-conf# nano docker-compose.yml
root@karartjom-Idea:/home/GB/wordpress/nginx-conf# root@karartjom-Idea:/home/GB/wordpress/nginx-conf# nano docker-compos^C
root@karartjom-Idea:/home/GB/wordpress/nginx-conf# docker-compose up
WARNING: The MYSQL_USER variable is not set. Defaulting to a blank string.
WARNING: The MYSQL_PASSWORD variable is not set. Defaulting to a blank string.
ERROR: Couldn't find env file: /home/GB/wordpress/nginx-conf/.env
root@karartjom-Idea:/home/GB/wordpress/nginx-conf# cd ..
root@karartjom-Idea:/home/GB/wordpress# cd nginx-conf/
root@karartjom-Idea:/home/GB/wordpress/nginx-conf# ls
docker-compose.yml  nginx.conf
root@karartjom-Idea:/home/GB/wordpress/nginx-conf# mv docker-compose.yml /home/GB/wordpress/
.env        nginx-conf/
root@karartjom-Idea:/home/GB/wordpress/nginx-conf# mv docker-compose.yml /home/GB/wordpress/
root@karartjom-Idea:/home/GB/wordpress/nginx-conf# ls
nginx.conf
root@karartjom-Idea:/home/GB/wordpress/nginx-conf# cd ..


root@karartjom-Idea:/home/GB/wordpress# docker-compose up
ERROR: Named volume "certbot-etc:/etc/letsencrypt:rw" is used in service "webserver" but no declaration was found in the volumes section.
root@karartjom-Idea:/home/GB/wordpress# nano docker-compose.yml
root@karartjom-Idea:/home/GB/wordpress# docker-compose up
Creating network "wordpress_app-network" with driver "bridge"
Creating volume "wordpress_wordpress" with default driver
Creating volume "wordpress_dbdata" with default driver
Creating volume "wordpress_certbot-etc" with default driver
Pulling db (mysql:8.3)...
8.3: Pulling from library/mysql
bd37f6d99203: Pull complete
e733cb057651: Pull complete
af2fd35011dc: Pull complete
e5233d0f6ee3: Pull complete
cf11fd8658d3: Pull complete
85344d57c3cb: Pull complete

Проверяем что докер контейнеры запущены (пришлось переподключаться по SSH к хосту, зависло на моменте создания контейнера):
root@karartjom-Idea:/home/GB/wordpress# docker-compose ps
  Name                 Command               State                Ports
-------------------------------------------------------------------------------------
db          docker-entrypoint.sh --def ...   Up      3306/tcp, 33060/tcp
webserver   /docker-entrypoint.sh ngin ...   Up      0.0.0.0:80->80/tcp,:::80->80/tcp
wordpress   docker-entrypoint.sh php-fpm     Up      9000/tcp
root@karartjom-Idea:/home/GB/wordpress# docker ps
CONTAINER ID   IMAGE                               COMMAND                  CREATED         STATUS         PORTS                               NAMES
93528b6bb144   nginx:1.27.2-alpine                 "/docker-entrypoint.…"   4 minutes ago   Up 4 minutes   0.0.0.0:80->80/tcp, :::80->80/tcp   webserver
f32504e0ec69   wordpress:6.6.2-php8.3-fpm-alpine   "docker-entrypoint.s…"   4 minutes ago   Up 4 minutes   9000/tcp                            wordpress
7a4857bb6ea6   mysql:8.3                           "docker-entrypoint.s…"   4 minutes ago   Up 4 minutes   3306/tcp, 33060/tcp                 db

root@karartjom-Idea:/home/GB/wordpress# curl localhost
root@karartjom-Idea:/home/GB/wordpress# ^C
root@karartjom-Idea:/home/GB/wordpress# curl -L localhost
<!DOCTYPE html>
<html lang="en-US" xml:lang="en-US">
<head>
        <meta name="viewport" content="width=device-width" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="robots" content="noindex,nofollow" />
        <title>WordPress &rsaquo; Installation</title>
        <link rel='stylesheet' id='dashicons-css' href='http://localhost/wp-includes/css/dashicons.min.css?ver=6.6.2' type='text/css' media='all' />
<link rel='stylesheet' id='buttons-css' href='http://localhost/wp-includes/css/buttons.min.css?ver=6.6.2' type='text/css' media='all' />
<link rel='stylesheet' id='forms-css' href='http://localhost/wp-admin/css/forms.min.css?ver=6.6.2' type='text/css' media='all' />
<link rel='stylesheet' id='l10n-css' href='http://localhost/wp-admin/css/l10n.min.css?ver=6.6.2' type='text/css' media='all' />
<link rel='stylesheet' id='install-css' href='http://localhost/wp-admin/css/install.min.css?ver=6.6.2' type='text/css' media='all' />
</head>
<body class="wp-core-ui language-chooser">
<p id="logo">WordPress</p>

• Запустить два контейнера, связанные одной сетью (используя документацию).
Первый контейнер БД (например, образ mariadb:10.8), второй контейнер — phpmyadmin.
Получить доступ к БД в первом контейнере через второй контейнер (веб-интерфейс phpmyadmin).
=======================================
Создаем новую сеть%
root@karartjom-Idea:/home/GB/wordpress# docker network create some-network
3d68d5fd87cd0036282e0d5796b15a4f185305596311638cbdd0a4e2d2bbda12

Создаем контейнер для mariadb:
root@karartjom-Idea:/home/GB/wordpress# docker run --rm --network some-network --name some-mariadb -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mariadb:11.5
Unable to find image 'mariadb:11.5' locally
11.5: Pulling from library/mariadb
ff65ddf9395b: Pull complete
60bf5e4921eb: Pull complete
d4d47b8d6ea0: Pull complete
e38fc7e50f91: Pull complete
725acd03a3bc: Pull complete
db106334738c: Pull complete
234171a3de7d: Pull complete
25efdea61d9c: Pull complete
Digest: sha256:4a1de8fa2a929944373d7421105500ff6f889ce90dcb883fbb2fdb070e4d427e
Status: Downloaded newer image for mariadb:11.5
1c23e0fcac6250026f56748fc4be7a0f0f939e136a51c91db2006998a5d1d2e4
root@karartjom-Idea:/home/GB/wordpress#

Теперь с phpmyadmin:
root@karartjom-Idea:/home/GB/wordpress# docker run --name myadmin -d --network some-network --link some-mariadb:db -p 8082:80 phpmyadmin
Unable to find image 'phpmyadmin:latest' locally
latest: Pulling from library/phpmyadmin
a480a496ba95: Already exists
f79e4c25acfd: Pull complete
3cdb90068a52: Pull complete
ba7ce5258fc9: Pull complete
4c3f92bad452: Pull complete
ec2e1a686039: Pull complete
3eadf64c8bac: Pull complete
f3c0c509ac91: Pull complete
68f29586bcad: Pull complete
b5fe5cc54219: Pull complete
50d05b87f75c: Pull complete
aa0dfe201c6c: Pull complete
84359bb2faf0: Pull complete
4f4fb700ef54: Pull complete
a852d42287a2: Pull complete
26a21fb4ac90: Pull complete
0c47290f817a: Pull complete
6cb3f7bdfe6c: Pull complete
f2507640ed2c: Pull complete
Digest: sha256:2ec46aba67db196e8a6987440dcd6dde7d15aa8f0435d84c8b8442d2b39f15c7
Status: Downloaded newer image for phpmyadmin:latest
95ad3b1fa45d43aedfc7bae7551754add25e2ae48056482067577fa6fcb0e973
root@karartjom-Idea:/home/GB/wordpress#

Проверяем состояние:
root@karartjom-Idea:/home/GB/wordpress# docker ps
CONTAINER ID   IMAGE                               COMMAND                  CREATED          STATUS          PORTS                                   NAMES
95ad3b1fa45d   phpmyadmin                          "/docker-entrypoint.…"   21 seconds ago   Up 18 seconds   0.0.0.0:8082->80/tcp, :::8082->80/tcp   myadmin
1c23e0fcac62   mariadb:11.5                        "docker-entrypoint.s…"   2 minutes ago    Up 2 minutes    3306/tcp                                some-mariadb
93528b6bb144   nginx:1.27.2-alpine                 "/docker-entrypoint.…"   13 minutes ago   Up 13 minutes   0.0.0.0:80->80/tcp, :::80->80/tcp       webserver
f32504e0ec69   wordpress:6.6.2-php8.3-fpm-alpine   "docker-entrypoint.s…"   13 minutes ago   Up 13 minutes   9000/tcp                                wordpress
7a4857bb6ea6   mysql:8.3                           "docker-entrypoint.s…"   13 minutes ago   Up 13 minutes   3306/tcp, 33060/tcp                     db

Проверяем что через браузер доступен phpmyadmin http://192.168.1.24:8082/